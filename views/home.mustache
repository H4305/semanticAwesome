<!DOCTYPE html>
<html lang="en">
<script type="text/javascript" src="http://code.jquery.com/jquery-1.7.1.min.js"></script>
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.9.0/themes/smoothness/jquery-ui.css" />
<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="/styles/main.css">
  <link rel="Shortcut Icon" href="/img/icon.png">
  <title>SemanticAwesome : the best way to find what you need.</title>
</head>
<body>
  <div class="bodyDiv">
    <h1><span class="blue">Sem</span><span class="red">ant</span><span class="yellow">ic</span><span class="blue">Awe</span><span class="red">some</span></h1>
    <h2><span class="subtitle">Easy. Fast. Strong.</span></h2>
    
    <div class="inputSearch">
      <input id="searchQuery" type="text" class="search-input" onKeyUp="edValueKeyPress()">

      <img id="search-img" src="/img/Search.png" />
    </div>
  <script>

    const AUTOCOMPLETE = "autoComplete/";

    document.getElementById("search-img").addEventListener('click', function() {
      window.location = "/search?q="+searchQuery.value;
    })

    $(document).keypress(function(event){
      var keycode = (event.keyCode ? event.keyCode : event.which);
      if(keycode == '13'){
        window.location = "/search?q="+searchQuery.value; 
      }
 
    });

    
    function edValueKeyPress()
    {
      var query = searchQuery.value;

      if(query && query.length>1)
      { 
        var response = httpGet(AUTOCOMPLETE + query);

        if(response != "noValue")
        {
          var jsonResponse = JSON.parse(response);

          var labels = [jsonResponse['Labels'][0]];

          for(i=1; i<jsonResponse['Labels'].length; i++)
          {
            labels.push(jsonResponse['Labels'][i]);
          }
          
          /*
          * jQuery UI Autocomplete: Highlight Matched Text
          * http://salman-w.blogspot.com/2013/12/jquery-ui-autocomplete-examples.html
          */
          $(function() {
          function highlightText(text, $node) {
            var searchText = $.trim(text).toLowerCase(), currentNode = $node.get(0).firstChild, matchIndex, newTextNode, newSpanNode;
            while ((matchIndex = currentNode.data.toLowerCase().indexOf(searchText)) >= 0) {
              newTextNode = currentNode.splitText(matchIndex);
              currentNode = newTextNode.splitText(searchText.length);
              newSpanNode = document.createElement("span");
              newSpanNode.className = "highlight";
              currentNode.parentNode.insertBefore(newSpanNode, currentNode);
              newSpanNode.appendChild(newTextNode);
            }
          }
          $("#searchQuery").autocomplete({
            source: labels
          }).data("ui-autocomplete")._renderItem = function(a, item) {
            var $a = $("<a></a>").text(item.label);
            highlightText(this.term, $a);
            return $("<a></a>").append($a).appendTo(a);
            };
          });
        }
      }
    }

    function httpGet(theUrl)
    {
        var xmlHttp = null;

        xmlHttp = new XMLHttpRequest();
        xmlHttp.open( "GET", theUrl, false );
        xmlHttp.send( null );
        return xmlHttp.responseText;
    }

  </script>

</body>
</html>